// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List                    = require("bs-platform/lib/js/list.js");
var $$String                = require("bs-platform/lib/js/string.js");
var Glamor                  = require("glamor");
var Glamor__InternalHelpers = require("./Glamor__InternalHelpers.bs.js");

function em(n) {
  return "" + (String(n) + "em");
}

function ex(n) {
  return "" + (String(n) + "ex");
}

function ch(n) {
  return "" + (String(n) + "ch");
}

function rem(n) {
  return "" + (String(n) + "rem");
}

function vw(n) {
  return "" + (String(n) + "vw");
}

function vh(n) {
  return "" + (String(n) + "vh");
}

function vmin(n) {
  return "" + (String(n) + "vmin");
}

function vmax(n) {
  return "" + (String(n) + "vmax");
}

function cm(n) {
  return "" + (String(n) + "cm");
}

function mm(n) {
  return "" + (String(n) + "mm");
}

function q(n) {
  return "" + (String(n) + "q");
}

function inch(n) {
  return "" + (String(n) + "in");
}

function pc(n) {
  return "" + (String(n) + "pc");
}

function pt(n) {
  return "" + (String(n) + "pt");
}

function px(n) {
  return "" + (String(n) + "px");
}

function pct(n) {
  return "" + (String(n) + "%");
}

function rad(n) {
  return "" + (String(n) + "rad");
}

function grad(n) {
  return "" + (String(n) + "grad");
}

function deg(n) {
  return "" + (String(n) + "deg");
}

function turn(n) {
  return "" + (String(n) + "turn");
}

function s(n) {
  return "" + (String(n) + "s");
}

function ms(n) {
  return "" + (String(n) + "ms");
}

function url(url$1) {
  return "url(" + (String(url$1) + ")");
}

function rgb(r, g, b) {
  return "rgb(" + (String(r) + (", " + (String(g) + (", " + (String(b) + ")")))));
}

function rgba(r, g, b, a) {
  return "rgba(" + (String(r) + (", " + (String(g) + (", " + (String(b) + (", " + (String(a) + ")")))))));
}

function hsl(h, s, l) {
  return "hsl(" + (String(h) + (", " + (String(s) + ("%, " + (String(l) + "%)")))));
}

function hsla(h, s, l, a) {
  return "hsla(" + (String(h) + (", " + (String(s) + ("%, " + (String(l) + ("%, " + (String(a) + ")")))))));
}

function hex(value) {
  return "#" + value.toString(16);
}

function ident(prim) {
  return prim;
}

var AnimatableProperty = /* module */[
  /* all */"all",
  /* backdropFilter */"backdrop-filter",
  /* background */"background",
  /* backgroundColor */"background-color",
  /* backgroundPosition */"background-position",
  /* backgroundSize */"background-size",
  /* border */"border",
  /* borderBottom */"border-bottom",
  /* borderBottomColor */"border-bottom-color",
  /* borderBottomLeftRadius */"border-bottom-left-radius",
  /* borderBottomRightRadius */"border-bottom-right-radius",
  /* borderBottomWidth */"border-bottom-width",
  /* borderColor */"border-color",
  /* borderLeft */"border-left",
  /* borderLeftColor */"border-left-color",
  /* borderLeftWidth */"border-left-width",
  /* borderRadius */"border-radius",
  /* borderRight */"border-right",
  /* borderRightColor */"border-right-color",
  /* borderRightWidth */"border-right-width",
  /* borderTop */"border-top",
  /* borderTopColor */"border-top-color",
  /* borderTopLeftRadius */"border-top-left-radius",
  /* borderTopRightRadius */"border-top-right-radius",
  /* borderTopWidth */"border-top-width",
  /* borderWidth */"border-width",
  /* bottom */"bottom",
  /* boxShadow */"box-shadow",
  /* caretColor */"caret-color",
  /* clip */"clip",
  /* clipPath */"clip-path",
  /* color */"color",
  /* columnCount */"column-count",
  /* columnGap */"column-gap",
  /* columnRule */"column-rule",
  /* columnRuleColor */"column-rule-color",
  /* columnRuleWidth */"column-rule-width",
  /* columnWidth */"column-width",
  /* columns */"columns",
  /* filter */"filter",
  /* flex */"flex",
  /* flexBasis */"flex-basis",
  /* flexGrow */"flex-grow",
  /* flexShrink */"flex-shrink",
  /* font */"font",
  /* fontSize */"font-size",
  /* fontSizeAdjust */"font-size-adjust",
  /* fontStretch */"font-stretch",
  /* fontVariationSettings */"font-variation-settings",
  /* fontWeight */"font-weight",
  /* gridColumnGap */"grid-column-gap",
  /* gridGap */"grid-gap",
  /* gridRowGap */"grid-row-gap",
  /* height */"height",
  /* left */"left",
  /* letterSpacing */"letter-spacing",
  /* lineHeight */"line-height",
  /* margin */"margin",
  /* marginBottom */"margin-bottom",
  /* marginLeft */"margin-left",
  /* marginRight */"margin-right",
  /* marginTop */"margin-top",
  /* mask */"mask",
  /* maskBorder */"mask-border",
  /* maskPosition */"mask-position",
  /* maskSize */"mask-size",
  /* maxHeight */"max-height",
  /* maxWidth */"max-width",
  /* minHeight */"min-height",
  /* minWidth */"min-width",
  /* objectPosition */"object-position",
  /* offset */"offset",
  /* offsetAnchor */"offset-anchor",
  /* offsetDistance */"offset-distance",
  /* offsetPath */"offset-path",
  /* offsetRotate */"offset-rotate",
  /* opacity */"opacity",
  /* order */"order",
  /* outline */"outline",
  /* outlineColor */"outline-color",
  /* outlineOffset */"outline-offset",
  /* outlineWidth */"outline-width",
  /* padding */"padding",
  /* paddingBottom */"padding-bottom",
  /* paddingLeft */"padding-left",
  /* paddingRight */"padding-right",
  /* paddingTop */"padding-top",
  /* right */"right",
  /* scrollSnapCoordinate */"scroll-snap-coordinate",
  /* scrollSnapDestination */"scroll-snap-destination",
  /* shapeImageThreshold */"shape-image-threshold",
  /* shapeMargin */"shape-margin",
  /* shapeOutside */"shape-outside",
  /* tabSize */"tab-size",
  /* textDecoration */"text-decoration",
  /* textDecorationColor */"text-decoration-color",
  /* textEmphasis */"text-emphasis",
  /* textEmphasisColor */"text-emphasis-color",
  /* textIndent */"text-indent",
  /* textShadow */"text-shadow",
  /* top */"top",
  /* transform */"transform",
  /* transformOrigin */"transform-origin",
  /* verticalAlign */"vertical-align",
  /* visibility */"visibility",
  /* width */"width",
  /* wordSpacing */"word-spacing",
  /* zIndex */"z-index"
];

function cubicBezier(param, param$1) {
  return "cubic-bezier(" + (String(param[0]) + (", " + (String(param[1]) + (", " + (String(param$1[0]) + (", " + (String(param$1[1]) + ")")))))));
}

function steps(n, pos) {
  return "steps(" + (String(n) + (", " + (String(pos) + ")")));
}

function frames(n) {
  return "frames(" + (String(n) + ")");
}

function margin(value) {
  return /* tuple */[
          "margin",
          value
        ];
}

function margin2(v, h) {
  return /* tuple */[
          "margin",
          "" + (String(v) + (" " + (String(h) + "")))
        ];
}

function margin3(top, h, bottom) {
  return /* tuple */[
          "margin",
          "" + (String(top) + (" " + (String(h) + (" " + (String(bottom) + "")))))
        ];
}

function margin4(top, right, bottom, left) {
  return /* tuple */[
          "margin",
          "" + (String(top) + (" " + (String(right) + (" " + (String(bottom) + (" " + (String(left) + "")))))))
        ];
}

function marginTop(value) {
  return /* tuple */[
          "marginTop",
          value
        ];
}

function marginRight(value) {
  return /* tuple */[
          "marginRight",
          value
        ];
}

function marginBottom(value) {
  return /* tuple */[
          "marginBottom",
          value
        ];
}

function marginLeft(value) {
  return /* tuple */[
          "marginLeft",
          value
        ];
}

function padding(value) {
  return /* tuple */[
          "padding",
          value
        ];
}

function padding2(v, h) {
  return /* tuple */[
          "padding",
          "" + (String(v) + (" " + (String(h) + "")))
        ];
}

function padding3(top, h, bottom) {
  return /* tuple */[
          "padding",
          "" + (String(top) + (" " + (String(h) + (" " + (String(bottom) + "")))))
        ];
}

function padding4(top, right, bottom, left) {
  return /* tuple */[
          "padding",
          "" + (String(top) + (" " + (String(right) + (" " + (String(bottom) + (" " + (String(left) + "")))))))
        ];
}

function paddingTop(value) {
  return /* tuple */[
          "paddingTop",
          value
        ];
}

function paddingRight(value) {
  return /* tuple */[
          "paddingRight",
          value
        ];
}

function paddingBottom(value) {
  return /* tuple */[
          "paddingBottom",
          value
        ];
}

function paddingLeft(value) {
  return /* tuple */[
          "paddingLeft",
          value
        ];
}

function border(value) {
  return /* tuple */[
          "border",
          value
        ];
}

function border2(width, color, style) {
  var value;
  if (width) {
    var w = width[0];
    value = color ? "" + (String(w) + (" " + (String(style) + (" " + (String(color[0]) + ""))))) : "" + (String(w) + (" " + (String(style) + "")));
  } else {
    value = color ? "" + (String(style) + (" " + (String(color[0]) + ""))) : style;
  }
  return /* tuple */[
          "border",
          value
        ];
}

function border3(width, style, color) {
  return /* tuple */[
          "border",
          "" + (String(width) + (" " + (String(style) + (" " + (String(color) + "")))))
        ];
}

function borderWidth(value) {
  return /* tuple */[
          "borderWidth",
          value
        ];
}

function borderTopWidth(value) {
  return /* tuple */[
          "borderTopWidth",
          value
        ];
}

function borderRightWidth(value) {
  return /* tuple */[
          "borderRightWidth",
          value
        ];
}

function borderBottomWidth(value) {
  return /* tuple */[
          "borderBottomWidth",
          value
        ];
}

function borderLeftWidth(value) {
  return /* tuple */[
          "borderLeftWidth",
          value
        ];
}

function borderStyle(value) {
  return /* tuple */[
          "borderStyle",
          value
        ];
}

function borderTopStyle(value) {
  return /* tuple */[
          "borderTopStyle",
          value
        ];
}

function borderRightStyle(value) {
  return /* tuple */[
          "borderRightStyle",
          value
        ];
}

function borderBottomStyle(value) {
  return /* tuple */[
          "borderBottomStyle",
          value
        ];
}

function borderLeftStyle(value) {
  return /* tuple */[
          "borderLeftStyle",
          value
        ];
}

function borderColor(value) {
  return /* tuple */[
          "borderColor",
          value
        ];
}

function borderTopColor(value) {
  return /* tuple */[
          "borderTopColor",
          value
        ];
}

function borderRightColor(value) {
  return /* tuple */[
          "borderRightColor",
          value
        ];
}

function borderBottomColor(value) {
  return /* tuple */[
          "borderBottomColor",
          value
        ];
}

function borderLeftColor(value) {
  return /* tuple */[
          "borderLeftColor",
          value
        ];
}

function borderRadius(value) {
  return /* tuple */[
          "borderRadius",
          value
        ];
}

function borderTopRightRadius(value) {
  return /* tuple */[
          "borderTopRightRadius",
          value
        ];
}

function borderTopRightRadius2(v, h) {
  return /* tuple */[
          "borderTopRightRadius",
          "" + (String(v) + (" " + (String(h) + "")))
        ];
}

function borderTopLeftRadius(value) {
  return /* tuple */[
          "borderTopLeftRadius",
          value
        ];
}

function borderTopLeftRadius2(v, h) {
  return /* tuple */[
          "borderTopLeftRadius",
          "" + (String(v) + (" " + (String(h) + "")))
        ];
}

function borderBottomRightRadius(value) {
  return /* tuple */[
          "borderBottomRightRadius",
          value
        ];
}

function borderBottomRightRadius2(v, h) {
  return /* tuple */[
          "borderBottomRightRadius",
          "" + (String(v) + (" " + (String(h) + "")))
        ];
}

function borderBottomLeftRadius(value) {
  return /* tuple */[
          "borderBottomLeftRadius",
          value
        ];
}

function borderBottomLeftRadius2(v, h) {
  return /* tuple */[
          "borderBottomLeftRadius",
          "" + (String(v) + (" " + (String(h) + "")))
        ];
}

function color(v) {
  return /* tuple */[
          "color",
          v
        ];
}

function background(v) {
  return /* tuple */[
          "background",
          v
        ];
}

function backgroundColor(v) {
  return /* tuple */[
          "backgroundColor",
          v
        ];
}

function backgroundImage(v) {
  return /* tuple */[
          "backgroundImage",
          v
        ];
}

function backgroundRepeat(v) {
  return /* tuple */[
          "backgroundRepeat",
          v
        ];
}

function backgroundAttachment(v) {
  return /* tuple */[
          "backgroundAttachment",
          v
        ];
}

function backgroundPosition(v) {
  return /* tuple */[
          "backgroundPosition",
          v
        ];
}

function backgroundPosition2(h, v) {
  return /* tuple */[
          "backgroundPosition",
          "" + (String(h) + (" " + (String(v) + "")))
        ];
}

function transitionProperty(v) {
  return /* tuple */[
          "transitionProperty",
          v
        ];
}

function transitionProperties(vs) {
  if (vs) {
    return /* tuple */[
            "transitionProperty",
            Glamor__InternalHelpers.Values[/* join */0](vs)
          ];
  } else {
    return /* tuple */[
            "transitionProperty",
            "none"
          ];
  }
}

function transitionDuration(v) {
  return /* tuple */[
          "transitionDuration",
          v
        ];
}

function transitionDurations(vs) {
  return /* tuple */[
          "transitionDuration",
          Glamor__InternalHelpers.Values[/* join */0](vs)
        ];
}

function transitionTimingFunction(v) {
  return /* tuple */[
          "transitionTimingFunction",
          v
        ];
}

function transitionTimingFunctions(vs) {
  return /* tuple */[
          "transitionTimingFunction",
          Glamor__InternalHelpers.Values[/* join */0](vs)
        ];
}

function transitionDelay(v) {
  return /* tuple */[
          "transitionDelay",
          v
        ];
}

function transitionDelays(vs) {
  return /* tuple */[
          "transitionDelay",
          Glamor__InternalHelpers.Values[/* join */0](vs)
        ];
}

function transition(v) {
  return /* tuple */[
          "transition",
          v
        ];
}

function transitions(vs) {
  if (vs) {
    return /* tuple */[
            "transition",
            $$String.concat(", ", List.map((function (param) {
                        return "" + (String(param[0]) + (" " + (String(param[1]) + (" " + (String(param[2]) + (" " + (String(param[3]) + "")))))));
                      }), vs))
          ];
  } else {
    return /* tuple */[
            "transition",
            "none"
          ];
  }
}

function select(selector, declarations) {
  return /* tuple */[
          selector,
          Glamor__InternalHelpers.Declarations[/* toDict */0](declarations)
        ];
}

function hover(declarations) {
  return select(":hover", declarations);
}

function css(declarations) {
  return Glamor.css(Glamor__InternalHelpers.Declarations[/* toDict */0](declarations));
}

var $$null = null;

var Core = /* CssCore */[];

var inherit_ = "inherit";

var initial = "initial";

var unset = "unset";

var zero = "0";

var currentColor = "currentColor";

var transparent = "transparent";

var aliceblue = "aliceblue";

var antiquewhite = "antiquewhite";

var aqua = "aqua";

var aquamarine = "aquamarine";

var azure = "azure";

var beige = "beige";

var bisque = "bisque";

var black = "black";

var blanchedalmond = "blanchedalmond";

var blue = "blue";

var blueviolet = "blueviolet";

var brown = "brown";

var burlywood = "burlywood";

var cadetblue = "cadetblue";

var chartreuse = "chartreuse";

var chocolate = "chocolate";

var coral = "coral";

var cornflowerblue = "cornflowerblue";

var cornsilk = "cornsilk";

var crimson = "crimson";

var cyan = "cyan";

var darkblue = "darkblue";

var darkcyan = "darkcyan";

var darkgoldenrod = "darkgoldenrod";

var darkgray = "darkgray";

var darkgrey = "darkgrey";

var darkgreen = "darkgreen";

var darkkhaki = "darkkhaki";

var darkmagenta = "darkmagenta";

var darkolivegreen = "darkolivegreen";

var darkorange = "darkorange";

var darkorchid = "darkorchid";

var darkred = "darkred";

var darksalmon = "darksalmon";

var darkseagreen = "darkseagreen";

var darkslateblue = "darkslateblue";

var darkslategray = "darkslategray";

var darkslategrey = "darkslategrey";

var darkturquoise = "darkturquoise";

var darkviolet = "darkviolet";

var deeppink = "deeppink";

var deepskyblue = "deepskyblue";

var dimgray = "dimgray";

var dimgrey = "dimgrey";

var dodgerblue = "dodgerblue";

var firebrick = "firebrick";

var floralwhite = "floralwhite";

var forestgreen = "forestgreen";

var fuchsia = "fuchsia";

var gainsboro = "gainsboro";

var ghostwhite = "ghostwhite";

var gold = "gold";

var goldenrod = "goldenrod";

var gray = "gray";

var grey = "grey";

var green = "green";

var greenyellow = "greenyellow";

var honeydew = "honeydew";

var hotpink = "hotpink";

var indianred = "indianred";

var indigo = "indigo";

var ivory = "ivory";

var khaki = "khaki";

var lavender = "lavender";

var lavenderblush = "lavenderblush";

var lawngreen = "lawngreen";

var lemonchiffon = "lemonchiffon";

var lightblue = "lightblue";

var lightcoral = "lightcoral";

var lightcyan = "lightcyan";

var lightgoldenrodyellow = "lightgoldenrodyellow";

var lightgray = "lightgray";

var lightgrey = "lightgrey";

var lightgreen = "lightgreen";

var lightpink = "lightpink";

var lightsalmon = "lightsalmon";

var lightseagreen = "lightseagreen";

var lightskyblue = "lightskyblue";

var lightslategray = "lightslategray";

var lightslategrey = "lightslategrey";

var lightsteelblue = "lightsteelblue";

var lightyellow = "lightyellow";

var lime = "lime";

var limegreen = "limegreen";

var linen = "linen";

var magenta = "magenta";

var maroon = "maroon";

var mediumaquamarine = "mediumaquamarine";

var mediumblue = "mediumblue";

var mediumorchid = "mediumorchid";

var mediumpurple = "mediumpurple";

var mediumseagreen = "mediumseagreen";

var mediumslateblue = "mediumslateblue";

var mediumspringgreen = "mediumspringgreen";

var mediumturquoise = "mediumturquoise";

var mediumvioletred = "mediumvioletred";

var midnightblue = "midnightblue";

var mintcream = "mintcream";

var mistyrose = "mistyrose";

var moccasin = "moccasin";

var navajowhite = "navajowhite";

var navy = "navy";

var oldlace = "oldlace";

var olive = "olive";

var olivedrab = "olivedrab";

var orange = "orange";

var orangered = "orangered";

var orchid = "orchid";

var palegoldenrod = "palegoldenrod";

var palegreen = "palegreen";

var paleturquoise = "paleturquoise";

var palevioletred = "palevioletred";

var papayawhip = "papayawhip";

var peachpuff = "peachpuff";

var peru = "peru";

var pink = "pink";

var plum = "plum";

var powderblue = "powderblue";

var purple = "purple";

var red = "red";

var rosybrown = "rosybrown";

var royalblue = "royalblue";

var saddlebrown = "saddlebrown";

var salmon = "salmon";

var sandybrown = "sandybrown";

var seagreen = "seagreen";

var seashell = "seashell";

var sienna = "sienna";

var silver = "silver";

var skyblue = "skyblue";

var slateblue = "slateblue";

var slategray = "slategray";

var slategrey = "slategrey";

var snow = "snow";

var springgreen = "springgreen";

var steelblue = "steelblue";

var tan = "tan";

var teal = "teal";

var thistle = "thistle";

var tomato = "tomato";

var turquoise = "turquoise";

var violet = "violet";

var wheat = "wheat";

var white = "white";

var whitesmoke = "whitesmoke";

var yellow = "yellow";

var yellowgreen = "yellowgreen";

var linear = "linear";

var ease = "ease";

var easeIn = "ease-in";

var easeOut = "ease-out";

var easeInOut = "ease-in-out";

var stepStart = "step-start";

var stepEnd = "step-end";

var none = "none";

var auto = "auto";

var thin = "thin";

var medium = "medium";

var thick = "thick";

var hidden = "hidden";

var dotted = "dotted";

var dashed = "dashed";

var solid = "solid";

var $$double = "double";

var groove = "groove";

var ridge = "ridge";

var inset = "inset";

var outset = "outset";

var start = "start";

var end_ = "end";

var repeat = "repeat";

var repeatX = "repeat-x";

var repeatY = "repeat-y";

var noRepeat = "no-repeat";

var scroll = "scroll";

var fixed = "fixed";

var center = "center";

var top = "top";

var right = "right";

var bottom = "bottom";

var left = "left";

exports.Core                      = Core;
exports.inherit_                  = inherit_;
exports.initial                   = initial;
exports.unset                     = unset;
exports.em                        = em;
exports.ex                        = ex;
exports.ch                        = ch;
exports.rem                       = rem;
exports.vw                        = vw;
exports.vh                        = vh;
exports.vmin                      = vmin;
exports.vmax                      = vmax;
exports.cm                        = cm;
exports.mm                        = mm;
exports.q                         = q;
exports.inch                      = inch;
exports.pc                        = pc;
exports.pt                        = pt;
exports.px                        = px;
exports.zero                      = zero;
exports.pct                       = pct;
exports.rad                       = rad;
exports.grad                      = grad;
exports.deg                       = deg;
exports.turn                      = turn;
exports.s                         = s;
exports.ms                        = ms;
exports.url                       = url;
exports.rgb                       = rgb;
exports.rgba                      = rgba;
exports.hsl                       = hsl;
exports.hsla                      = hsla;
exports.hex                       = hex;
exports.currentColor              = currentColor;
exports.transparent               = transparent;
exports.aliceblue                 = aliceblue;
exports.antiquewhite              = antiquewhite;
exports.aqua                      = aqua;
exports.aquamarine                = aquamarine;
exports.azure                     = azure;
exports.beige                     = beige;
exports.bisque                    = bisque;
exports.black                     = black;
exports.blanchedalmond            = blanchedalmond;
exports.blue                      = blue;
exports.blueviolet                = blueviolet;
exports.brown                     = brown;
exports.burlywood                 = burlywood;
exports.cadetblue                 = cadetblue;
exports.chartreuse                = chartreuse;
exports.chocolate                 = chocolate;
exports.coral                     = coral;
exports.cornflowerblue            = cornflowerblue;
exports.cornsilk                  = cornsilk;
exports.crimson                   = crimson;
exports.cyan                      = cyan;
exports.darkblue                  = darkblue;
exports.darkcyan                  = darkcyan;
exports.darkgoldenrod             = darkgoldenrod;
exports.darkgray                  = darkgray;
exports.darkgrey                  = darkgrey;
exports.darkgreen                 = darkgreen;
exports.darkkhaki                 = darkkhaki;
exports.darkmagenta               = darkmagenta;
exports.darkolivegreen            = darkolivegreen;
exports.darkorange                = darkorange;
exports.darkorchid                = darkorchid;
exports.darkred                   = darkred;
exports.darksalmon                = darksalmon;
exports.darkseagreen              = darkseagreen;
exports.darkslateblue             = darkslateblue;
exports.darkslategray             = darkslategray;
exports.darkslategrey             = darkslategrey;
exports.darkturquoise             = darkturquoise;
exports.darkviolet                = darkviolet;
exports.deeppink                  = deeppink;
exports.deepskyblue               = deepskyblue;
exports.dimgray                   = dimgray;
exports.dimgrey                   = dimgrey;
exports.dodgerblue                = dodgerblue;
exports.firebrick                 = firebrick;
exports.floralwhite               = floralwhite;
exports.forestgreen               = forestgreen;
exports.fuchsia                   = fuchsia;
exports.gainsboro                 = gainsboro;
exports.ghostwhite                = ghostwhite;
exports.gold                      = gold;
exports.goldenrod                 = goldenrod;
exports.gray                      = gray;
exports.grey                      = grey;
exports.green                     = green;
exports.greenyellow               = greenyellow;
exports.honeydew                  = honeydew;
exports.hotpink                   = hotpink;
exports.indianred                 = indianred;
exports.indigo                    = indigo;
exports.ivory                     = ivory;
exports.khaki                     = khaki;
exports.lavender                  = lavender;
exports.lavenderblush             = lavenderblush;
exports.lawngreen                 = lawngreen;
exports.lemonchiffon              = lemonchiffon;
exports.lightblue                 = lightblue;
exports.lightcoral                = lightcoral;
exports.lightcyan                 = lightcyan;
exports.lightgoldenrodyellow      = lightgoldenrodyellow;
exports.lightgray                 = lightgray;
exports.lightgrey                 = lightgrey;
exports.lightgreen                = lightgreen;
exports.lightpink                 = lightpink;
exports.lightsalmon               = lightsalmon;
exports.lightseagreen             = lightseagreen;
exports.lightskyblue              = lightskyblue;
exports.lightslategray            = lightslategray;
exports.lightslategrey            = lightslategrey;
exports.lightsteelblue            = lightsteelblue;
exports.lightyellow               = lightyellow;
exports.lime                      = lime;
exports.limegreen                 = limegreen;
exports.linen                     = linen;
exports.magenta                   = magenta;
exports.maroon                    = maroon;
exports.mediumaquamarine          = mediumaquamarine;
exports.mediumblue                = mediumblue;
exports.mediumorchid              = mediumorchid;
exports.mediumpurple              = mediumpurple;
exports.mediumseagreen            = mediumseagreen;
exports.mediumslateblue           = mediumslateblue;
exports.mediumspringgreen         = mediumspringgreen;
exports.mediumturquoise           = mediumturquoise;
exports.mediumvioletred           = mediumvioletred;
exports.midnightblue              = midnightblue;
exports.mintcream                 = mintcream;
exports.mistyrose                 = mistyrose;
exports.moccasin                  = moccasin;
exports.navajowhite               = navajowhite;
exports.navy                      = navy;
exports.oldlace                   = oldlace;
exports.olive                     = olive;
exports.olivedrab                 = olivedrab;
exports.orange                    = orange;
exports.orangered                 = orangered;
exports.orchid                    = orchid;
exports.palegoldenrod             = palegoldenrod;
exports.palegreen                 = palegreen;
exports.paleturquoise             = paleturquoise;
exports.palevioletred             = palevioletred;
exports.papayawhip                = papayawhip;
exports.peachpuff                 = peachpuff;
exports.peru                      = peru;
exports.pink                      = pink;
exports.plum                      = plum;
exports.powderblue                = powderblue;
exports.purple                    = purple;
exports.red                       = red;
exports.rosybrown                 = rosybrown;
exports.royalblue                 = royalblue;
exports.saddlebrown               = saddlebrown;
exports.salmon                    = salmon;
exports.sandybrown                = sandybrown;
exports.seagreen                  = seagreen;
exports.seashell                  = seashell;
exports.sienna                    = sienna;
exports.silver                    = silver;
exports.skyblue                   = skyblue;
exports.slateblue                 = slateblue;
exports.slategray                 = slategray;
exports.slategrey                 = slategrey;
exports.snow                      = snow;
exports.springgreen               = springgreen;
exports.steelblue                 = steelblue;
exports.tan                       = tan;
exports.teal                      = teal;
exports.thistle                   = thistle;
exports.tomato                    = tomato;
exports.turquoise                 = turquoise;
exports.violet                    = violet;
exports.wheat                     = wheat;
exports.white                     = white;
exports.whitesmoke                = whitesmoke;
exports.yellow                    = yellow;
exports.yellowgreen               = yellowgreen;
exports.ident                     = ident;
exports.AnimatableProperty        = AnimatableProperty;
exports.linear                    = linear;
exports.ease                      = ease;
exports.easeIn                    = easeIn;
exports.easeOut                   = easeOut;
exports.easeInOut                 = easeInOut;
exports.cubicBezier               = cubicBezier;
exports.stepStart                 = stepStart;
exports.stepEnd                   = stepEnd;
exports.steps                     = steps;
exports.frames                    = frames;
exports.none                      = none;
exports.auto                      = auto;
exports.thin                      = thin;
exports.medium                    = medium;
exports.thick                     = thick;
exports.hidden                    = hidden;
exports.dotted                    = dotted;
exports.dashed                    = dashed;
exports.solid                     = solid;
exports.$$double                  = $$double;
exports.groove                    = groove;
exports.ridge                     = ridge;
exports.inset                     = inset;
exports.outset                    = outset;
exports.start                     = start;
exports.end_                      = end_;
exports.repeat                    = repeat;
exports.repeatX                   = repeatX;
exports.repeatY                   = repeatY;
exports.noRepeat                  = noRepeat;
exports.scroll                    = scroll;
exports.fixed                     = fixed;
exports.center                    = center;
exports.top                       = top;
exports.right                     = right;
exports.bottom                    = bottom;
exports.left                      = left;
exports.margin                    = margin;
exports.margin2                   = margin2;
exports.margin3                   = margin3;
exports.margin4                   = margin4;
exports.marginTop                 = marginTop;
exports.marginRight               = marginRight;
exports.marginBottom              = marginBottom;
exports.marginLeft                = marginLeft;
exports.padding                   = padding;
exports.padding2                  = padding2;
exports.padding3                  = padding3;
exports.padding4                  = padding4;
exports.paddingTop                = paddingTop;
exports.paddingRight              = paddingRight;
exports.paddingBottom             = paddingBottom;
exports.paddingLeft               = paddingLeft;
exports.border                    = border;
exports.border2                   = border2;
exports.border3                   = border3;
exports.borderWidth               = borderWidth;
exports.borderTopWidth            = borderTopWidth;
exports.borderRightWidth          = borderRightWidth;
exports.borderBottomWidth         = borderBottomWidth;
exports.borderLeftWidth           = borderLeftWidth;
exports.borderStyle               = borderStyle;
exports.borderTopStyle            = borderTopStyle;
exports.borderRightStyle          = borderRightStyle;
exports.borderBottomStyle         = borderBottomStyle;
exports.borderLeftStyle           = borderLeftStyle;
exports.borderColor               = borderColor;
exports.borderTopColor            = borderTopColor;
exports.borderRightColor          = borderRightColor;
exports.borderBottomColor         = borderBottomColor;
exports.borderLeftColor           = borderLeftColor;
exports.borderRadius              = borderRadius;
exports.borderTopLeftRadius       = borderTopLeftRadius;
exports.borderTopLeftRadius2      = borderTopLeftRadius2;
exports.borderTopRightRadius      = borderTopRightRadius;
exports.borderTopRightRadius2     = borderTopRightRadius2;
exports.borderBottomRightRadius   = borderBottomRightRadius;
exports.borderBottomRightRadius2  = borderBottomRightRadius2;
exports.borderBottomLeftRadius    = borderBottomLeftRadius;
exports.borderBottomLeftRadius2   = borderBottomLeftRadius2;
exports.color                     = color;
exports.background                = background;
exports.backgroundColor           = backgroundColor;
exports.backgroundImage           = backgroundImage;
exports.backgroundRepeat          = backgroundRepeat;
exports.backgroundAttachment      = backgroundAttachment;
exports.backgroundPosition        = backgroundPosition;
exports.backgroundPosition2       = backgroundPosition2;
exports.transitionProperty        = transitionProperty;
exports.transitionProperties      = transitionProperties;
exports.transitionDuration        = transitionDuration;
exports.transitionDurations       = transitionDurations;
exports.transitionTimingFunction  = transitionTimingFunction;
exports.transitionTimingFunctions = transitionTimingFunctions;
exports.transitionDelay           = transitionDelay;
exports.transitionDelays          = transitionDelays;
exports.transition                = transition;
exports.transitions               = transitions;
exports.select                    = select;
exports.hover                     = hover;
exports.css                       = css;
exports.$$null                    = $$null;
/* null Not a pure module */
